package manager.view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Arrays;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.WindowConstants;
import javax.swing.border.EmptyBorder;

import manager.dao.BookDao;
import manager.entity.DateInt;
import manager.entity.User;
import manager.util.BarChart;
import manager.util.DateUtil;
import manager.util.DbUtil;
import manager.util.Dialogutil;
import manager.util.StringUtil;
import manager.util.TimeSeriesChart;

public class purchaseCount extends JFrame {

	private JPanel contentPane;

	 //设置跟随分辨率变化窗口
		Toolkit kit = Toolkit.getDefaultToolkit();
	    Dimension screenSize = kit.getScreenSize();
		private int screenHeight = (int) screenSize.getHeight();
	    private int screenWidth = (int) screenSize.getWidth();
	    private double enlargement_x=screenWidth/1920;
	    private double enlargement_y=screenHeight/1080;
	    private int windowWidth ; //获得窗口宽
	    private int windowHeight; //获得窗口高
	    int []BookMonthly=new int[13];//统计各月借阅数量,下标与月份对齐
		int CurrentYear;//当前年份，用于折线图数据
		DbUtil dbUtil=new DbUtil();
		BookDao bookDao=new BookDao(); 
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					purchaseCount frame = new purchaseCount();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public purchaseCount() 
	{
		setTitle("\u56FE\u4E66\u91C7\u8D2D\u60C5\u51B5\u7EDF\u8BA1");
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		setBounds(screenWidth * 2/7, screenHeight / 3, (int)(1400*enlargement_x),(int)(1600*enlargement_y));
		windowWidth = this.getWidth(); //获得窗口宽
		windowHeight = this.getHeight(); //获得窗口高
		this.setLocation(screenWidth / 2 - windowWidth / 2, screenHeight / 2 - windowHeight / 2);//设置窗口居中显示
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new GridLayout(2,1,10,10));
		HisBorrowTimeSeries( BookMonthly);
		contentPane.add(new TimeSeriesChart(BookMonthly,CurrentYear).getChartPanel());//添加柱形图  
	}

	/**
	 * 今年各月购书数量统计
	 * @param BookMonthly
	 */
	void HisBorrowTimeSeries( int []BookMonthly)
	{
		Connection con=null;
		Arrays.fill(BookMonthly,0);
		try {
			con=dbUtil.getCon();			
				//获取当前时间
				java.sql.Date currentDate = new java.sql.Date(System.currentTimeMillis());
				DateInt curdate=new DateInt();
				DateUtil.getdate(currentDate, curdate);
				this.CurrentYear=curdate.getYear();
				//查询所有记录
				StringBuffer sb=new StringBuffer("select * from t_perchase");
				PreparedStatement pstmt=con.prepareStatement(sb.toString());
				ResultSet Hispur=pstmt.executeQuery();//获取所有记录
				while( Hispur.next())
				{
					DateInt date=new DateInt();				
					DateUtil.getdate(Hispur.getDate("purTime"), date);				
					if(curdate.getYear()==date.getYear())
					{
						BookMonthly[date.getMonth()]++;
					}
					else
					{
						continue;
					}
				}
			}		
		 catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
