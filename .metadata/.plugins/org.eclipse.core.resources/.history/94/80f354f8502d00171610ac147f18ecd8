package manager.view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;

import manager.dao.BookDao;
import manager.dao.BookTypeDao;
import manager.entity.BookType;
import manager.util.DbUtil;

import javax.swing.JSplitPane;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.sql.Connection;
import java.sql.ResultSet;

import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JMenuItem;

import java.awt.Font;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;

import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JToolBar;
import javax.swing.SwingConstants;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import javax.swing.ImageIcon;

public class userMainFrm extends JFrame {

	
	private int windowWidth ; //获得窗口宽
    private int windowHeight; //获得窗口高
  //设置跟随分辨率变化窗口
	Toolkit kit = Toolkit.getDefaultToolkit();
    Dimension screenSize = kit.getScreenSize();
	private int screenHeight = (int) screenSize.getHeight();
    private int screenWidth = (int) screenSize.getWidth();
    private double enlargement_x=screenWidth/1920;
    private double enlargement_y=screenHeight/1080;
    private final double split_scale=0.25;
    
    //容器组件
    private JPanel contentPane;
    private JSplitPane splitPane = new JSplitPane();
    JPanel TutorJp = new JPanel();
    JPanel OperationJp = new JPanel();
    private JComboBox booktypeJcb;
    private DbUtil  dbUtil=new DbUtil();
    private BookTypeDao bookTypeDao=new BookTypeDao();
   	private BookDao bookDao=new BookDao();
   	
   	private final JLabel lblNewLabel = new JLabel("\u56FE\u4E66\u540D\u79F0");
   	private final JTextField textField = new JTextField();
   	private final JButton button = new JButton("\u67E5\u8BE2");
   	private final JLabel label_1 = new JLabel("\u56FE\u4E66\u67E5\u8BE2\u4E0E\u501F\u9605");
   	
   	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					userMainFrm frame = new userMainFrm();
					frame.setVisible(true);
					frame.splitPane.setDividerLocation(0.25);//设定分割面板的左右比例(这时候就生效了，如果放在setVisible(true)这据之前就不会有效果。
					frame.splitPane.setEnabled(false);            //设置分隔条禁止拖动  
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public userMainFrm() {
		button.setIcon(new ImageIcon(userMainFrm.class.getResource("/manager/image/search.png")));
		button.setFont(new Font("宋体", Font.PLAIN, 35));
		textField.setFont(new Font("宋体", Font.PLAIN, 35));
		textField.setColumns(10);
		lblNewLabel.setFont(new Font("宋体", Font.PLAIN, 35));
		setTitle("\u7528\u6237\u4E3B\u754C\u9762");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 3268, 1833);
		//设置JFrame最大化
		this.setExtendedState(JFrame.MAXIMIZED_BOTH); 
		windowWidth = this.getWidth(); //获得窗口宽
		windowHeight = this.getHeight();
//		setVisible(true);
//		splitPane.setDividerLocation(0.25);//设定分割面板的左右比例(这时候就生效了，如果放在setVisible(true)这据之前就不会有效果。
//		splitPane.setEnabled(false);            //设置分隔条禁止拖动  
		this.getContentPane().add(splitPane, java.awt.BorderLayout.CENTER);
		splitPane.add(TutorJp, JSplitPane.LEFT);
		GroupLayout gl_TutorJp = new GroupLayout(TutorJp);
		JLayeredPane SearchJlp = new JLayeredPane();
		//GroupLayout gl_TutorJp = new GroupLayout(TutorJp);
//		gl_TutorJp.setHorizontalGroup(
//			gl_TutorJp.createParallelGroup(Alignment.LEADING)
//				.addGroup(gl_TutorJp.createSequentialGroup()
//					.addContainerGap()
//					.addComponent(SearchJlp,  GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
//					.addContainerGap())
//		);
//		gl_TutorJp.setVerticalGroup(
//			gl_TutorJp.createParallelGroup(Alignment.LEADING)
//				.addGroup(gl_TutorJp.createSequentialGroup()
//					.addContainerGap()
//					.addComponent(SearchJlp,GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
//					.addContainerGap(579, Short.MAX_VALUE))
//		);
		label_1.setFont(new Font("宋体", Font.PLAIN, 35));
		label_1.setBounds(41, 0, 135, 35);
		
		SearchJlp.add(label_1);
		TutorJp.setLayout(gl_TutorJp);
		
		JInternalFrame internalFrame = new JInternalFrame("\u56FE\u4E66\u67E5\u8BE2\u4E0E\u501F\u9605");
		BasicInternalFrameUI ui = (BasicInternalFrameUI)internalFrame.getUI();
		ui.setNorthPane(null);
		internalFrame.setBorder(BorderFactory.createEmptyBorder());
		internalFrame.setVisible(true);
		//GroupLayout gl_TutorJp = new GroupLayout(TutorJp);
		gl_TutorJp.setHorizontalGroup(
			gl_TutorJp.createParallelGroup(Alignment.TRAILING)
				.addGroup(gl_TutorJp.createSequentialGroup()
					.addContainerGap(45, Short.MAX_VALUE)
					.addComponent(internalFrame, GroupLayout.PREFERRED_SIZE, 639, GroupLayout.PREFERRED_SIZE)
					.addGap(37))
		);
		gl_TutorJp.setVerticalGroup(
			gl_TutorJp.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_TutorJp.createSequentialGroup()
					.addContainerGap()
					.addComponent(internalFrame, GroupLayout.PREFERRED_SIZE, 280, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(456, Short.MAX_VALUE))
		);
		
		JToolBar toolBar = new JToolBar();
		toolBar.setFont(new Font("宋体", Font.PLAIN, 35));
		toolBar.setOrientation(SwingConstants.VERTICAL);
		GroupLayout groupLayout = new GroupLayout(internalFrame.getContentPane());
		groupLayout.setHorizontalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addComponent(toolBar, GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
		);
		groupLayout.setVerticalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addComponent(toolBar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(103, Short.MAX_VALUE))
		);
		
		JMenuItem mntmNewMenuItem = new JMenuItem("\u56FE\u4E66\u67E5\u8BE2");
		mntmNewMenuItem.setFont(new Font("宋体", Font.PLAIN, 35));
		toolBar.add(mntmNewMenuItem);
		mntmNewMenuItem.setHorizontalAlignment(SwingConstants.CENTER);
		
		JMenuItem mntmNewMenuItem_1 = new JMenuItem("\u56FE\u4E66\u501F\u9605");
		mntmNewMenuItem_1.setFont(new Font("宋体", Font.PLAIN, 35));
		toolBar.add(mntmNewMenuItem_1);
		mntmNewMenuItem_1.setHorizontalAlignment(SwingConstants.CENTER);
		internalFrame.getContentPane().setLayout(groupLayout);
		
//		JMenuBar menuBar = new JMenuBar();
//		menuBar.setFont(new Font("宋体", Font.PLAIN, 35));
//		internalFrame.setJMenuBar(menuBar);
		TutorJp.setLayout(gl_TutorJp);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 762, 860);
		
		String imgPath = "D://Database//DataBase_Project//BookManager//src//manager//image//frame.jpg"; 
		Dimension dimension = new Dimension(668, 157);  //图片大小
		TutorJp.setPreferredSize(dimension);
        final Image imageBg = Toolkit.getDefaultToolkit()  
                .getImage(imgPath);  
        ImageIcon imageIcon = new ImageIcon(imageBg.getScaledInstance  
                (dimension.width, dimension.height, Image.SCALE_FAST));
        final Point origin = new Point(10, 30);  
        final Rectangle rectangle = new Rectangle(origin, dimension);
		splitPane.add(OperationJp, JSplitPane.RIGHT);
		
		JLabel label = new JLabel("\u56FE\u4E66\u79CD\u7C7B");
		label.setFont(new Font("宋体", Font.PLAIN, 35));
		label.setEnabled(false);
		
		booktypeJcb = new JComboBox();
		booktypeJcb.setFont(new Font("宋体", Font.PLAIN, 35));
		GroupLayout gl_OperationJp = new GroupLayout(OperationJp);
		OperationJp.setLayout(gl_OperationJp);
		
		
		  /*****初始化事件***/
        this.addComponentListener(new ComponentAdapter()//初始化分割比
        {
            public void componentResized(ComponentEvent e) {
            	splitPane.setDividerLocation(split_scale);
            }
        });
        fillBookType();//初始化下拉框
	}
	
	
	
	
	/**
	 * 初始化图书类别下拉框
	 */
	private void fillBookType(){
		Connection con=null;
		BookType bookType=null;
		try{
			con=dbUtil.getCon();
			ResultSet rs=bookTypeDao.list(con, new BookType());
			while(rs.next())
			{
				bookType=new BookType();
				bookType.setId(rs.getInt("id"));
				bookType.setBookTypeName(rs.getString("bookTypeName"));
				this.booktypeJcb.addItem(bookType);//添加项
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			
		}
	}
}
