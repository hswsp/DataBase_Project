package manager.view;

import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.Vector;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.border.EmptyBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

import manager.dao.BookDao;
import manager.dao.BookTypeDao;
import manager.entity.Book;
import manager.entity.BookType;
import manager.util.DbUtil;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;
import javax.swing.JTextArea;

public class BookManagerFrm extends JFrame {

	//设置跟随分辨率变化窗口
	Toolkit kit = Toolkit.getDefaultToolkit();
    Dimension screenSize = kit.getScreenSize();
	private int screenHeight = (int) screenSize.getHeight();
    private int screenWidth = (int) screenSize.getWidth();
    private double enlargement_x=screenWidth/1920;
    private double enlargement_y=screenHeight/1080;

    private int windowWidth ; //获得窗口宽
    private int windowHeight; //获得窗口高
    
	private JPanel contentPane;
	private JTable BookTable;
	private JTextField S_BookNameTxt;
	private JTextField S_AuthorTxt;
	private JComboBox S_BookTypeJcb; 
	
	private DbUtil dbUtil=new DbUtil();
	private BookTypeDao bookTypeDao=new BookTypeDao();
	private BookDao bookDao=new BookDao();
	private JTextField textField;
	private JTextField textField_1;
	private final ButtonGroup buttonGroup = new ButtonGroup();
	private JTextField textField_2;
	private JTextField textField_3;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					BookManagerFrm frame = new BookManagerFrm();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public BookManagerFrm() {
		setResizable(false);
		setTitle("\u56FE\u4E66\u7BA1\u7406");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100,100,(int)( 1900*enlargement_x), (int)(1600*enlargement_y));//设置初始位置（无所谓，后面重置），大小		
		windowWidth = this.getWidth(); //获得窗口宽
		windowHeight = this.getHeight(); //获得窗口高
		this.setLocation(screenWidth / 2 - windowWidth / 2, screenHeight / 2 - windowHeight / 2);//设置窗口居中显示
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		
		JScrollPane scrollPane = new JScrollPane();
		
		JPanel BookSearchJP = new JPanel();
		BookSearchJP.setBorder(new TitledBorder(null, "\u641C\u7D22\u6761\u4EF6", TitledBorder.LEADING,
				TitledBorder.TOP, new Font("宋体", Font.PLAIN, 30), null));
		
		JPanel panel = new JPanel();
		panel.setBorder(new TitledBorder(null, "\u56FE\u4E66\u5217\u8868\u64CD\u4F5C", TitledBorder.LEADING,
				TitledBorder.TOP, new Font("宋体", Font.PLAIN, 30), null));
		GroupLayout gl_contentPane = new GroupLayout(contentPane);
		gl_contentPane.setHorizontalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addGap(126)
					.addGroup(gl_contentPane.createParallelGroup(Alignment.TRAILING)
						.addComponent(panel, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(Alignment.LEADING, gl_contentPane.createParallelGroup(Alignment.TRAILING, false)
							.addComponent(scrollPane)
							.addComponent(BookSearchJP, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
					.addContainerGap(87, Short.MAX_VALUE))
		);
		gl_contentPane.setVerticalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addGap(54)
					.addComponent(BookSearchJP, GroupLayout.PREFERRED_SIZE, 155, GroupLayout.PREFERRED_SIZE)
					.addGap(53)
					.addComponent(scrollPane, GroupLayout.PREFERRED_SIZE, 373, GroupLayout.PREFERRED_SIZE)
					.addGap(48)
					.addComponent(panel, GroupLayout.PREFERRED_SIZE, 801, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(44, Short.MAX_VALUE))
		);
		
		JLabel label_4 = new JLabel("\u7F16\u53F7");
		label_4.setFont(new Font("宋体", Font.PLAIN, 35));
		
		textField = new JTextField();
		textField.setEditable(false);
		textField.setFont(new Font("宋体", Font.PLAIN, 35));
		textField.setColumns(10);
		
		JLabel label_5 = new JLabel("\u56FE\u4E66\u540D\u79F0");
		label_5.setFont(new Font("宋体", Font.PLAIN, 35));
		
		textField_1 = new JTextField();
		textField_1.setFont(new Font("宋体", Font.PLAIN, 35));
		textField_1.setColumns(10);
		
		JLabel label_6 = new JLabel("\u4F5C\u8005\u6027\u522B");
		label_6.setFont(new Font("宋体", Font.PLAIN, 35));
		
		JRadioButton radioButton = new JRadioButton("\u7537");
		buttonGroup.add(radioButton);
		radioButton.setSelected(true);
		radioButton.setFont(new Font("宋体", Font.PLAIN, 35));
		
		JRadioButton radioButton_1 = new JRadioButton("\u5973");
		buttonGroup.add(radioButton_1);
		radioButton_1.setFont(new Font("宋体", Font.PLAIN, 35));
		
		JLabel label_7 = new JLabel("\u4EF7\u683C");
		label_7.setFont(new Font("宋体", Font.PLAIN, 35));
		
		textField_2 = new JTextField();
		textField_2.setFont(new Font("宋体", Font.PLAIN, 35));
		textField_2.setColumns(10);
		
		JLabel label_8 = new JLabel("\u56FE\u4E66\u4F5C\u8005");
		label_8.setFont(new Font("宋体", Font.PLAIN, 35));
		
		textField_3 = new JTextField();
		textField_3.setFont(new Font("宋体", Font.PLAIN, 35));
		textField_3.setColumns(10);
		
		JLabel label_9 = new JLabel("\u56FE\u4E66\u7C7B\u522B");
		label_9.setFont(new Font("宋体", Font.PLAIN, 35));
		
		JComboBox comboBox = new JComboBox();
		comboBox.setFont(new Font("宋体", Font.PLAIN, 35));
		
		JLabel label_10 = new JLabel("\u56FE\u4E66\u63CF\u8FF0");
		label_10.setFont(new Font("宋体", Font.PLAIN, 35));
		
		JTextArea textArea = new JTextArea();
		
		JButton button = new JButton("\u4FEE\u6539");
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		button.setIcon(new ImageIcon(BookManagerFrm.class.getResource("/manager/image/modify.png")));
		button.setFont(new Font("宋体", Font.PLAIN, 35));
		
		JButton button_1 = new JButton("\u5220\u9664");
		button_1.setIcon(new ImageIcon(BookManagerFrm.class.getResource("/manager/image/delete.png")));
		button_1.setFont(new Font("宋体", Font.PLAIN, 35));
		GroupLayout gl_panel = new GroupLayout(panel);
		gl_panel.setHorizontalGroup(
			gl_panel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel.createSequentialGroup()
					.addGap(84)
					.addGroup(gl_panel.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_panel.createSequentialGroup()
							.addComponent(label_10)
							.addPreferredGap(ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
							.addComponent(textArea, GroupLayout.PREFERRED_SIZE, 1323, GroupLayout.PREFERRED_SIZE))
						.addGroup(gl_panel.createSequentialGroup()
							.addGroup(gl_panel.createParallelGroup(Alignment.LEADING, false)
								.addGroup(gl_panel.createSequentialGroup()
									.addComponent(label_7, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(textField_2))
								.addGroup(gl_panel.createSequentialGroup()
									.addComponent(label_4, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.RELATED)
									.addComponent(textField, GroupLayout.PREFERRED_SIZE, 260, GroupLayout.PREFERRED_SIZE)))
							.addPreferredGap(ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
							.addGroup(gl_panel.createParallelGroup(Alignment.LEADING, false)
								.addGroup(gl_panel.createSequentialGroup()
									.addComponent(label_5)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(textField_1, GroupLayout.PREFERRED_SIZE, 478, GroupLayout.PREFERRED_SIZE)
									.addGap(80)
									.addComponent(label_6)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(radioButton)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(radioButton_1))
								.addGroup(gl_panel.createSequentialGroup()
									.addComponent(label_8)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(textField_3, GroupLayout.PREFERRED_SIZE, 408, GroupLayout.PREFERRED_SIZE)
									.addGap(68)
									.addComponent(label_9)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(comboBox, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
					.addGap(67))
				.addGroup(gl_panel.createSequentialGroup()
					.addGap(231)
					.addComponent(button)
					.addPreferredGap(ComponentPlacement.RELATED, 1036, Short.MAX_VALUE)
					.addComponent(button_1)
					.addGap(146))
		);
		gl_panel.setVerticalGroup(
			gl_panel.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_panel.createSequentialGroup()
					.addGap(76)
					.addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)
						.addComponent(label_4)
						.addComponent(textField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(radioButton_1)
						.addComponent(radioButton)
						.addComponent(label_6)
						.addComponent(textField_1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(label_5))
					.addGap(97)
					.addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)
						.addComponent(label_7)
						.addComponent(textField_2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(label_8)
						.addComponent(textField_3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(label_9)
						.addComponent(comboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(98)
					.addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)
						.addComponent(label_10)
						.addComponent(textArea, GroupLayout.PREFERRED_SIZE, 241, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
					.addGroup(gl_panel.createParallelGroup(Alignment.BASELINE)
						.addComponent(button)
						.addComponent(button_1))
					.addGap(35))
		);
		panel.setLayout(gl_panel);
		
		JLabel label = new JLabel("\u56FE\u4E66\u540D\u79F0");
		label.setFont(new Font("宋体", Font.PLAIN, 35));
		
		S_BookNameTxt = new JTextField();
		S_BookNameTxt.setFont(new Font("宋体", Font.PLAIN, 35));
		S_BookNameTxt.setColumns(10);
		
		JLabel label_1 = new JLabel("\u56FE\u4E66\u4F5C\u8005");
		label_1.setFont(new Font("宋体", Font.PLAIN, 35));
		
		S_AuthorTxt = new JTextField();
		S_AuthorTxt.setFont(new Font("宋体", Font.PLAIN, 35));
		S_AuthorTxt.setColumns(10);
		
		JLabel label_2 = new JLabel("\u56FE\u4E66\u7C7B\u522B");
		label_2.setFont(new Font("宋体", Font.PLAIN, 35));
		
		S_BookTypeJcb = new JComboBox();
		S_BookTypeJcb.setFont(new Font("宋体", Font.PLAIN, 35));
		
		JLabel label_3 = new JLabel("");
		
		JButton S_BookNameJb = new JButton("\u67E5\u8BE2");
		S_BookNameJb.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				bookSearchActionPerformed(e);
			}
		});
		S_BookNameJb.setIcon(new ImageIcon(BookManagerFrm.class.getResource("/manager/image/search.png")));
		S_BookNameJb.setFont(new Font("宋体", Font.PLAIN, 35));
		GroupLayout gl_BookSearchJP = new GroupLayout(BookSearchJP);
		gl_BookSearchJP.setHorizontalGroup(
			gl_BookSearchJP.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_BookSearchJP.createSequentialGroup()
					.addContainerGap()
					.addComponent(label)
					.addGap(18)
					.addComponent(S_BookNameTxt, GroupLayout.PREFERRED_SIZE, 301, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(label_1)
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(S_AuthorTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addGap(75)
					.addComponent(label_2)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(S_BookTypeJcb, GroupLayout.PREFERRED_SIZE, 293, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(gl_BookSearchJP.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_BookSearchJP.createSequentialGroup()
							.addGap(48)
							.addComponent(label_3)
							.addContainerGap(229, Short.MAX_VALUE))
						.addGroup(Alignment.TRAILING, gl_BookSearchJP.createSequentialGroup()
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(S_BookNameJb)
							.addGap(48))))
		);
		gl_BookSearchJP.setVerticalGroup(
			gl_BookSearchJP.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_BookSearchJP.createSequentialGroup()
					.addGap(15)
					.addGroup(gl_BookSearchJP.createParallelGroup(Alignment.BASELINE)
						.addComponent(label)
						.addComponent(S_BookNameTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(S_AuthorTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(label_1)
						.addComponent(label_2)
						.addComponent(S_BookTypeJcb, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
						.addComponent(label_3)
						.addComponent(S_BookNameJb))
					.addContainerGap(49, Short.MAX_VALUE))
		);
		BookSearchJP.setLayout(gl_BookSearchJP);
		
		BookTable = new JTable();
		scrollPane.add(BookTable);
		BookTable.setFont(new Font("宋体", Font.PLAIN, 35));
		BookTable.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"\u7F16\u53F7", "\u56FE\u4E66\u540D\u79F0", "\u56FE\u4E66\u4F5C\u8005", "\u4F5C\u8005\u6027\u522B", "\u56FE\u4E66\u4EF7\u683C", "\u56FE\u4E66\u63CF\u8FF0", "\u56FE\u4E66\u7C7B\u522B"
			}
		) {
			boolean[] columnEditables = new boolean[] {
				false, false, false, false, false, false, false
			};
			public boolean isCellEditable(int row, int column) {
				return columnEditables[column];
			}
		});
		BookTable.getColumnModel().getColumn(0).setPreferredWidth(96);
		BookTable.getColumnModel().getColumn(1).setPreferredWidth(203);
		BookTable.getColumnModel().getColumn(2).setPreferredWidth(177);
		BookTable.getColumnModel().getColumn(3).setPreferredWidth(143);
		BookTable.getColumnModel().getColumn(4).setPreferredWidth(152);
		BookTable.getColumnModel().getColumn(5).setPreferredWidth(465);
		BookTable.getColumnModel().getColumn(6).setPreferredWidth(162);
		//修改表头大小和字体大小
		BookTable.getTableHeader().setPreferredSize(new Dimension((int)(1*enlargement_x),(int)(40*enlargement_y)));
		BookTable.getTableHeader().setFont(new Font("宋体", Font.PLAIN, (int)(35*enlargement_y)));
		BookTable.setRowHeight((int)(40*enlargement_y));
		scrollPane.setViewportView(BookTable);
		contentPane.setLayout(gl_contentPane);
		
		this.fillBookType("search");//规范一点用final static
		this.fillTable(new Book());
	}
	
	
	
	/**
	 * 图书查询事件处理
	 * @param e
	 */
	private void bookSearchActionPerformed(ActionEvent evt) {
		String bookName=this.S_BookNameTxt.getText();
		String author=this.S_AuthorTxt.getText();
		BookType bookType=(BookType) this.S_BookTypeJcb.getSelectedItem();//返回object类,强转
		int bookTypeId=bookType.getId();
		
		Book book=new Book(bookName,author,bookTypeId);
		this.fillTable(book);
	}
	
	/**
	 * 初始化下拉框
	 * @param type 下拉框类型 
	 */
	private void fillBookType(String type)
	{//区别哪一种下拉框
		Connection con=null;
		BookType bookType=null;
		try{
			con=dbUtil.getCon();
			ResultSet rs=bookTypeDao.list(con, new BookType());
			
			if("search".equals(type)){//search的下拉框多一项请选择，其他就不用了
				bookType=new BookType();
				bookType.setBookTypeName("请选择...");
				bookType.setId(-1);//请选择的ID为-1
				this.S_BookTypeJcb.addItem(bookType);
			}
			while(rs.next()){
				//resultset的next（）方法，每调用一次，游标后移一个，
				//一开始是处于第一行前,beforeFirst,第一次使用next()就将指针指向返回结果集的第一行。
				//当resultset游动到最后一行，再调用next（）方法会返回false，并且游标也到了最后一行的后面。
				bookType=new BookType();
				bookType.setBookTypeName(rs.getString("bookTypeName"));
				bookType.setId(rs.getInt("id"));//getInt(int columnIndex) 以 Java 编程语言中的整数形式获取此 ResultSet 对象当前行中指定列的值。
				if("search".equals(type)){
					this.S_BookTypeJcb.addItem(bookType);
				}else if("modify".equals(type)){
					
				}
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			try {
				dbUtil.closeCon(con);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	/**
	 * 初始化表格数据
	 * @param book
	 */
	private void fillTable(Book book)
	{
		DefaultTableModel dtm=(DefaultTableModel) BookTable.getModel();//获取模型
		dtm.setRowCount(0); // 设置成0行
		Connection con=null;
		try{
			con=dbUtil.getCon();
			ResultSet rs=bookDao.list(con, book);//获取所有记录
			while(rs.next()){
				Vector v=new Vector();//按顺序写
				v.add(rs.getString("id"));
				v.add(rs.getString("bookName"));
				v.add(rs.getString("author"));
				v.add(rs.getString("sex"));
				v.add(rs.getFloat("price"));
				v.add(rs.getString("bookDesc"));
				v.add(rs.getString("bookTypeName"));
				dtm.addRow(v);//加一行
			}
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			try {
				dbUtil.closeCon(con);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
}
