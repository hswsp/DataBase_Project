package manager.util;

import java.awt.Color;
import java.awt.Font;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer3D;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.TextAnchor;

public class BarChart {
	  ChartPanel frame1; 
	  
	  public BarChart() {
		super();
		// TODO Auto-generated constructor stub
	}

	public  BarChart(StringBuffer[] TypeBuffer,int[] number)
	  {  
	  CategoryDataset dataset = getDataSet(TypeBuffer,number);  
	  JFreeChart chart = ChartFactory.createBarChart3D( "各类图书借阅统计", // 图表标题  
			                    "图书种类", // 目录轴的显示标签  
	                            "数量", // 数值轴的显示标签  
	                            dataset, // 数据集  
	                            PlotOrientation.VERTICAL, // 图表方向：水平、垂直  
	                            true,           // 是否显示图例(对于简单的柱状图必须是false)  
	                            false,          // 是否生成工具  
	                            false           // 是否生成URL链接  
	                            );  
	          
	     //从这里开始  
	     CategoryPlot plot=chart.getCategoryPlot();//获取图表区域对象  
	     CategoryAxis domainAxis=plot.getDomainAxis();         //水平底部列表  
	     domainAxis.setLabelFont(new Font("黑体",Font.BOLD,30));         //水平底部标题  
	     domainAxis.setTickLabelFont(new Font("宋体",Font.BOLD,30));  //垂直标题  
	     
	     ValueAxis rangeAxis=plot.getRangeAxis();//获取柱状  
	     //设置刻度
	     NumberTickUnit numberTickUnit = new NumberTickUnit(1);
	     ((NumberAxis)rangeAxis).setTickUnit(numberTickUnit);
	     //设置柱状图顶部数字
	     BarRenderer3D renderer = (BarRenderer3D) plot.getRenderer(); ;  
	     renderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator()); //显示每个柱的数值  
	     
	     renderer.setBaseItemLabelsVisible(true);  
	     renderer.setBaseItemLabelPaint(Color.BLACK);  
	     renderer.setBaseItemLabelFont(new Font("宋书",Font.PLAIN,30));  
	   //注意：此句很关键，若无此句，那数字的显示会被覆盖，给人数字没有显示出来的问题 
	     renderer.setBasePositiveItemLabelPosition(new ItemLabelPosition
	    		 (ItemLabelAnchor.OUTSIDE3,TextAnchor.BASELINE_CENTER ));//ItemLabelAnchor.OUTSIDE12, TextAnchor.BASELINE_RIGHT
	     renderer.setItemLabelAnchorOffset(10D);// 设置柱形图上的文字偏离值 
	     rangeAxis.setLabelFont(new Font("黑体",Font.BOLD,15));  
	     chart.getLegend().setItemFont(new Font("黑体", Font.BOLD, 30));  
	     chart.getTitle().setFont(new Font("宋体",Font.BOLD,30));//设置标题字体  	            
	     //到这里结束，虽然代码有点多，但只为一个目的，解决汉字乱码问题              
	      frame1=new ChartPanel(chart,true);        //这里也可以用chartFrame,可以直接生成一个独立的Frame             
	    } 
	    
	    /**
	     * 获取数据
	     * @return
	     */
       private static CategoryDataset getDataSet(StringBuffer[] TypeBuffer,int[] number) 
       {  
           DefaultCategoryDataset dataset = new DefaultCategoryDataset();  
           for(int i=0;i<TypeBuffer.length;++i)
			{
        	   if(StringUtil.isEmpty(TypeBuffer[i].toString()))
				{
					continue;
				}
        	   else
        	   {
        		   dataset.addValue(number[i],TypeBuffer[i].toString(),TypeBuffer[i].toString());
        	   }
			}
//           dataset.addValue(100, "北京", "苹果");  
//           dataset.addValue(100, "上海", "苹果");  
//           dataset.addValue(100, "广州", "苹果");  
//           dataset.addValue(200, "北京", "梨子");  
//           dataset.addValue(200, "上海", "梨子");  
//           dataset.addValue(200, "广州", "梨子");  
//           dataset.addValue(300, "北京", "葡萄");  
//           dataset.addValue(300, "上海", "葡萄");  
//           dataset.addValue(300, "广州", "葡萄");  
//           dataset.addValue(400, "北京", "香蕉");  
//           dataset.addValue(400, "上海", "香蕉");  
//           dataset.addValue(400, "广州", "香蕉");  
//           dataset.addValue(500, "北京", "荔枝");  
//           dataset.addValue(500, "上海", "荔枝");  
//           dataset.addValue(500, "广州", "荔枝");  
           return dataset;  
}  
	public ChartPanel getChartPanel()
	{  
	    return frame1;  
	    
	}  
//	private static JFreeChart createChart(String title, String domain, 
//			String range, CategoryDataset dataset) { 
//			// create the chart... 
//			JFreeChart chart = ChartFactory.createBarChart3D(title, // title 
//			domain, // domain axis label 
//			range, // range axis label 
//			dataset, // data 
//			PlotOrientation.VERTICAL, // orientation 
//			true, // include legend 
//			true, // tooltips? 
//			false // URLs? 
//			); 
//			// set the textTitle of the chart 
//			TextTitle textTitle = chart.getTitle(); 
//			//设置标题的字体 
//			String fontA = "华文细黑"; 
//			String fontB = "黑体"; 
//			textTitle.setFont(new Font(fontA,Font.PLAIN,13)); 
//			textTitle.setBackgroundPaint(new GradientPaint(0.0F, 0.0F, Color.decode("#EEF7FF"), 
//			250F, 0.0F, Color.white, true)); 
//			textTitle.setExpandToFitSpace(true); 
//			chart.setBackgroundPaint(new GradientPaint(0.0F, 0.0F, Color.decode("#EEF7FF"), 
//			250F, 0.0F, Color.white, true)); 
//
//			        CategoryPlot plot = (CategoryPlot) chart.getCategoryPlot(); 
//			        BarRenderer3D customBarRenderer = (BarRenderer3D) plot.getRenderer(); 
//			        //CustomBarRenderer3D customBarRenderer = new CustomBarRenderer3D(); 
//			        //BarRenderer3D customBarRenderer = new BarRenderer3D(); 
//
//			plot.setDomainGridlinePaint(Color.white); 
//			plot.setDomainGridlinesVisible(true); 
//			plot.setRangeGridlinePaint(Color.black); 
//			plot.setBackgroundPaint(Color.decode("#F9E9D2")); 
//			// 设置是否有横线 
//			plot.setRangeGridlinesVisible(false); 
//			NumberAxis numberaxis = (NumberAxis) plot.getRangeAxis(); 
//			numberaxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits()); 
//			//设置纵坐标名称的字体 
//			numberaxis.setLabelFont(new Font(fontA,Font.PLAIN,16)); 
//			//设置纵坐标上显示的数字字体 
//			numberaxis.setTickLabelFont(new Font("Fixedsys",Font.PLAIN,13)); 
//			//设置横坐标名称的字体 
//			CategoryAxis categoryaxis = plot.getDomainAxis(); 
//			categoryaxis.setLabelFont(new Font(fontA,Font.PLAIN,16)); 
//			//设置横坐标上显示各个业务子项的字体 
//			categoryaxis.setTickLabelFont(new Font(fontA,Font.PLAIN,12)); 
//			categoryaxis.setMaximumCategoryLabelLines(100); 
//			categoryaxis.setMaximumCategoryLabelWidthRatio(100); 
//			//横坐标数据倾斜45度 
//			categoryaxis.setCategoryLabelPositions(CategoryLabelPositions.UP_45); 
//			// 顶端设置 
//			numberaxis.setUpperMargin(0.14999999999999999D); 
//			// 设置颜色 
//			Paint apaint[] = createPaint(); 
//
//			customBarRenderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator());//显示每个柱的数值 
//			customBarRenderer.setBaseItemLabelsVisible(true); 
//			//注意：此句很关键，若无此句，那数字的显示会被覆盖，给人数字没有显示出来的问题 
//			customBarRenderer.setBasePositiveItemLabelPosition(new ItemLabelPosition( 
//			ItemLabelAnchor.OUTSIDE12, TextAnchor.BASELINE_CENTER)); 
//			customBarRenderer.setItemLabelAnchorOffset(10D);// 设置柱形图上的文字偏离值 
//			customBarRenderer.setItemLabelsVisible(true); 
//
//			//设定柱子上面的颜色 
//			customBarRenderer.setSeriesPaint(0, Color.decode("#24F4DB")); // 给series1 Bar 
//			customBarRenderer.setSeriesPaint(1, Color.decode("#7979FF")); // 给series2 Bar 
//			customBarRenderer.setSeriesPaint(2, Color.decode("#FF5555")); // 给series3 Bar 
//			customBarRenderer.setSeriesPaint(3, Color.decode("#F8D661")); // 给series4 Bar 
//			customBarRenderer.setSeriesPaint(4, Color.decode("#F284DC")); // 给series5 Bar 
//			customBarRenderer.setSeriesPaint(5, Color.decode("#00BF00")); // 给series6 Bar 
//			customBarRenderer.setSeriesOutlinePaint(0,Color.BLACK);//边框为黑色 
//			customBarRenderer.setSeriesOutlinePaint(1,Color.BLACK);//边框为黑色 
//			customBarRenderer.setSeriesOutlinePaint(2,Color.BLACK); //边框为黑色 
//			customBarRenderer.setSeriesOutlinePaint(3,Color.BLACK);//边框为黑色 
//			customBarRenderer.setSeriesOutlinePaint(4,Color.BLACK);//边框为黑色 
//			customBarRenderer.setSeriesOutlinePaint(5,Color.BLACK); //边框为黑色 
//			//设置柱子的最大宽度 
//			customBarRenderer.setMaximumBarWidth(0.04); 
//			customBarRenderer.setItemMargin(0.000000005); 
//			plot.setRenderer(customBarRenderer); 
//			return chart; 
//			} 
}
